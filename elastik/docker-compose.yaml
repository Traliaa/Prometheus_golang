version: "3.9"
services:

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
      volumes:
        - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/config.yml
        - elasticsearch_data:/usr/share/elasticsearch/data
      ports:
        - "9200:9200"
      environment:
        ES_JAVA_OPTS: "-Xmx256m -Xms256m"
        ELASTIC_PASSWORD: elasticPass
        # Use single node discovery in order to disable production mode and avoid bootstrap checks.
        # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
        discovery.type: single-node
      networks:
        - elk

    kibana:
        image: "docker.elastic.co/kibana/kibana:7.15.1"
        volumes:
          - ./config/kibana.yml:/usr/share/kibana/config/config.yml
        ports:
          - "5601:5601"
        networks:
          - elk
        depends_on:
          - elasticsearch

    filebeat:
        image: "docker.elastic.co/beats/filebeat:7.15.1"
        user: root
        volumes:
            - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
            - /var/lib/docker:/var/lib/docker:ro
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
          - elk
        depends_on:
          - elasticsearch

    golang:
      build:
        context: golang/
      labels:
        co.elastic.logs/enabled: true
        co.elastic.logs/json.keys_under_root: true
        co.elastic.logs/json.overwrite_keys: true
        co.elastic.logs/json.add_error_key: true
        co.elastic.logs/json.expand_keys: true
      networks:
        - elk
      ports:
        - "83:83"
        - "84:84"
volumes:
    elasticsearch_data:
networks:
  elk:
    driver: bridge